Model, Dataset, Locations, Z-value, time, assignments

"sam_global(0)", Dataset0, "[13, 16]", 14949.490593327922, 0.01 seconds, "{13: [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 19], 16: [5, 6, 7, 8, 9, 15, 16, 17, 18]}"
"sam_global(1)", Dataset1, "[13, 53, 83, 75, 27, 50, 78, 65, 49, 68]", 28636.59546803705, 2.19 seconds, "{13: [0, 2, 4, 8, 13, 18, 19, 22, 23, 24, 25, 28, 39, 40, 71, 73, 84, 93], 27: [6, 7, 9, 14, 16, 17, 26, 52, 72, 95], 49: [20, 42, 43, 45, 46, 48, 49, 51, 58, 59, 66, 70, 92], 50: [10, 50, 65], 53: [1, 32, 33, 41, 53, 54, 60, 63, 74, 76, 98], 65: [15, 21, 31, 61, 62, 67], 68: [30, 34, 44, 47, 55, 56, 68, 69, 87], 75: [5, 12, 35, 36, 37, 75, 77, 80, 81, 85, 88, 90], 78: [11, 27, 29, 38, 57, 64, 78, 79, 82, 83, 89, 91, 96, 97, 99], 83: [3, 86, 94]}"

Dataset8 : ('34.59 seconds, Z : 14388.795641053493', [69, 13, 55, 16, 26, 8, 75, 48, 53, 23, 78, 42, 45, 50, 61, 81, 105, 123, 160, 140, 165, 144, 143, 146, 229, 181, 191, 274, 271, 292], {8: [17], 13: [1, 4, 5, 9, 11, 12, 13, 23, 25, 33, 40, 58, 59, 79, 92, 98, 120, 128, 134, 199, 208, 212, 217, 220, 221, 270, 273, 274, 275, 279, 282, 296], 16: [6, 7, 8, 16, 131], 23: [22, 24, 32, 73, 180], 26: [14, 15, 26, 27, 36, 37, 41, 76, 87, 93, 140, 162, 164, 225, 235, 263, 268, 277, 281], 42: [42, 46, 70], 45: [44, 45, 51], 48: [19, 43, 47, 48, 52, 57, 60, 65, 143, 148, 219, 222, 236, 276, 280], 50: [50, 66, 67], 53: [20, 53, 54, 56, 63, 64, 170, 177, 178, 188, 194], 55: [2, 3, 21, 55, 68, 72, 168, 189, 269, 278], 61: [61, 62, 169, 175, 181, 182, 190, 197, 203, 205, 210, 214], 69: [0, 10, 69], 75: [18, 30, 31, 34, 35, 39, 49, 74, 75, 84, 90, 171, 172, 185, 226, 234, 272], 78: [28, 29, 38, 71, 77, 78, 83, 86, 88, 99, 103, 105, 115, 127, 133, 157, 158, 218, 244, 248, 271], 81: [80, 81, 82, 85, 89, 193, 249, 264, 283, 284, 285, 286, 288, 291, 292, 293, 294, 295, 297, 298], 105: [91, 100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 113, 116, 119, 123], 123: [94, 114, 118, 121, 122, 124, 125, 126, 129], 140: [130, 135], 143: [137, 147, 167], 144: [136, 144, 145, 152], 146: [141, 142, 146, 150, 153, 159], 160: [95, 96, 97, 107, 117, 139, 149, 151, 154, 155, 156, 160, 161], 165: [132, 138, 163, 165, 166], 181: [174, 183, 184, 191, 196, 198, 202, 204, 206, 207, 209, 211, 213, 216], 191: [176, 179, 186, 187, 192, 195, 201, 215, 227], 229: [173, 200, 223, 224, 228, 229, 230, 231, 232, 239], 271: [243, 254, 257, 258, 261, 262, 265, 266, 267], 274: [233, 237, 238, 240, 241, 242, 245, 246, 247, 250, 251, 252, 253, 255, 256, 259, 260], 292: [287, 289, 290, 299]})
Dataset8 with Z <= maximums[0] : ('26.97 seconds, Z : 14388.795641053493', [69, 78, 55, 13, 75, 16, 23, 26, 8, 48, 53, 187, 42, 44, 50, 61, 81, 292, 121, 160, 105, 140, 134, 150, 152, 143, 181, 240, 231, 271], {8: [17, 163], 13: [3, 11, 12, 13, 23, 25, 32, 199, 217, 221, 263, 278], 16: [6, 7, 8, 16, 29], 23: [10, 22, 24, 73], 26: [14, 26, 27, 36, 37, 219], 42: [42, 46, 70], 44: [44, 45], 48: [18, 43, 47, 48, 49, 208, 212, 218, 235, 269, 270, 272, 296], 50: [50, 62, 170, 190], 53: [20, 52, 53, 54, 56, 58, 63, 64, 65, 66, 67, 164, 177, 178, 205], 55: [2, 21, 41, 51, 55, 57, 68, 92, 93, 168, 274], 61: [60, 61, 169, 174, 176, 181, 182, 188, 194, 204, 216], 69: [0, 69], 75: [4, 5, 9, 15, 28, 30, 33, 34, 35, 39, 59, 72, 74, 75, 84, 90, 128, 134, 143, 148, 171, 172, 185, 189, 222, 234, 236, 244, 248, 268, 271, 273, 276, 277, 279, 280, 281, 282], 78: [1, 19, 38, 40, 71, 76, 77, 78, 79, 83, 87, 88, 99, 103, 105, 120, 127, 139, 157, 220, 225, 226, 275], 81: [80, 81, 82, 85, 89, 125, 180, 193, 249, 264, 283, 284, 285, 286, 288, 291, 292, 293, 294, 295, 297, 298], 105: [100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 123, 124, 129, 162], 121: [91, 94, 121, 122, 126], 134: [131, 132, 137, 149, 165, 166], 140: [130, 133, 135, 141, 144], 143: [156, 167], 150: [136, 138, 140, 142, 146, 147, 153, 154], 152: [152, 158], 160: [95, 96, 97, 98, 107, 116, 117, 145, 150, 151, 155, 159, 160, 161], 181: [175, 183, 196, 202, 203, 206, 207, 209, 211], 187: [31, 173, 179, 184, 186, 187, 191, 192, 195, 197, 198, 224], 231: [201, 215, 223, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 241, 247], 240: [200, 210, 213, 214, 240, 245, 246, 250, 251, 253, 254], 271: [242, 243, 252, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267], 292: [86, 287, 289, 290, 299]})

Dataset6 with both additions and CapacityConstraint in the form <= C
('53.46 seconds, Z : 24335.475750434798', [32, 1, 85, 111, 48, 108, 74, 19, 30, 86, 110, 199, 133, 37, 153, 26, 94, 59, 179, 44, 117, 160, 175, 91, 72, 122, 77, 95, 150, 128, 143, 131, 51, 7, 154], {1: [1, 7, 123, 184, 197, 199], 7: [81, 106, 185], 19: [9, 87, 156, 171], 26: [20, 26, 49, 71, 113, 125, 128, 154, 159, 181], 30: [10, 30, 77, 102, 187, 193], 32: [0, 3, 68, 124, 161], 37: [17, 78, 169, 192], 44: [27, 41, 44, 79], 48: [5, 14, 19, 22, 40, 48, 66, 67, 84, 101, 172, 178], 51: [80, 132, 191], 59: [24, 33, 57, 146], 72: [35, 89, 130, 170], 74: [8, 50, 109, 118, 139, 142, 198], 77: [46, 96, 138, 190], 85: [2, 54, 69, 85, 110, 176, 188], 86: [11, 75, 144, 157, 163], 91: [34, 56, 91, 140, 149], 94: [23, 32, 58, 62, 93, 94, 99, 116, 134, 158, 182, 194], 95: [47, 121, 177, 195], 108: [6, 12, 108, 153, 174], 110: [13, 37, 63, 83, 88, 95, 114, 173, 179], 111: [4, 39, 64, 115, 126], 117: [28, 38, 92, 117, 129, 145, 167, 183], 122: [36, 82, 122, 148], 128: [60, 86, 90, 103, 136, 137], 131: [70, 97, 111, 131, 164], 133: [16, 127, 133, 162], 143: [61, 74, 100, 105, 143, 152, 165, 180], 150: [55, 59, 65, 73, 98, 107, 112], 153: [18, 21, 52, 53, 135, 150, 155], 154: [141, 186, 189], 160: [29, 42, 104, 160], 175: [31, 72, 119, 166, 175, 196], 179: [25, 76, 120, 151, 168], 199: [15, 43, 45, 51, 147]})

Dataset6 with both additions and CapacityConstraint in the form <= C * z_j
('33.25 seconds, Z : 24335.475750434798', [32, 84, 13, 130, 115, 48, 7, 8, 19, 193, 157, 108, 43, 16, 152, 153, 189, 59, 94, 117, 160, 91, 72, 114, 82, 77, 44, 15, 95, 26, 74, 119, 85, 110, 128], {7: [7, 81, 84, 106, 141, 184, 185], 8: [8, 25, 74, 76, 98, 100, 109, 120, 179, 180, 198], 13: [2, 13, 33, 59, 73, 107, 199], 15: [45, 102, 147, 191], 16: [16, 127, 133, 162], 19: [9, 26, 87, 156, 171], 26: [49, 113, 125, 154, 159, 172], 32: [0, 68, 118, 124, 161], 43: [15, 27, 51, 190], 44: [43, 44, 79, 96], 48: [5, 6, 14, 22, 48, 66, 67, 101], 59: [21, 24, 57, 63, 146, 153], 72: [35, 64, 89, 115], 74: [50, 72, 139, 142, 151, 168], 77: [41, 46, 132, 138], 82: [37, 82, 85, 114, 122, 150, 194], 84: [1, 123, 178, 197], 85: [54, 65, 69, 110, 167, 176], 91: [34, 56, 91, 149, 160], 94: [23, 32, 58, 62, 93, 94, 99, 116, 134, 158, 181, 182], 95: [47, 121, 177, 195], 108: [12, 19, 40, 71, 108, 128, 174], 110: [55, 83, 88, 95, 112, 173, 188], 114: [36, 143, 148, 165, 169], 115: [4, 31, 111, 170], 117: [28, 38, 92, 129, 140, 145, 183], 119: [52, 119, 164, 175, 196], 128: [86, 90, 103, 136, 144], 130: [3, 39, 97, 130, 131], 152: [17, 61, 78, 105, 152, 192], 153: [18, 53, 60, 135, 137, 155], 157: [11, 70, 75, 126, 157, 163, 166], 160: [29, 42, 104, 117], 189: [20, 186, 189], 193: [10, 30, 77, 80, 187, 193]})


"sam_apx1(0, 90)", Dataset0, "[13, 16]", 14949.490593327922, 0.01 seconds, "{13: [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 18, 19], 16: [6, 7, 8, 16, 17]}"
"sam_apx1(1, 90)", Dataset1, "[68, 53, 49, 13, 27, 99, 93, 90, 50, 61]", 28636.59546803705, 2.01 seconds, "{13: [5, 6, 13, 24, 27, 28, 34, 38, 39, 40, 52], 27: [7, 14, 16, 17, 26, 36, 37], 49: [4, 41, 42, 46, 47, 48, 63, 64, 67, 70, 71], 50: [30, 50], 53: [3, 51, 53, 54, 68], 61: [57, 60, 61, 62, 65, 66], 68: [0, 1, 2, 23, 25, 29, 31, 32, 33, 43, 44, 45, 49, 55, 56, 69], 90: [10, 22, 35, 73, 75, 80, 81, 88], 93: [9, 11, 12, 15, 18, 19, 20, 21, 58, 59, 72, 74, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99], 99: [8, 78, 95, 96]}"
"sam_apx1(2, 90)", Dataset2, "[3, 1, 99, 71, 47, 17, 5, 52, 24, 92, 0, 32, 20, 56, 25]", 34145.919873390434, 665.44 seconds, "{0: [12, 18, 19, 53, 54, 88], 1: [1, 9, 13, 58, 75, 79, 94, 96, 97], 3: [0, 7, 28, 55, 69, 87], 5: [6, 16, 17, 21, 39, 60], 17: [5, 35, 37, 65], 20: [20, 33, 45, 49, 67, 70, 73], 24: [10, 24, 43, 50, 57, 64, 82, 84], 25: [25, 36, 61, 62, 76, 80, 81], 32: [15, 23, 29, 46, 51, 59, 91], 47: [4, 38, 47, 85, 93], 52: [8, 30, 34, 52, 83, 98], 56: [22, 31, 40, 56, 66, 77], 71: [3, 42, 48, 68, 71, 72, 92, 95], 92: [11, 14, 27, 44, 63, 78, 86, 89], 99: [2, 26, 32, 41, 74, 90, 99]}"

dataset8 with ifs from clustering:
('IFS took 0.12 seconds. Total time: 23.49 seconds, Z : 14388.795641053493', [2, 291, 55, 152, 7, 8, 130, 75, 13, 26, 24, 160, 271, 43, 48, 44, 50, 53, 81, 61, 78, 105, 124, 166, 146, 165, 178, 232, 207, 250], {2: [0, 10, 69], 7: [6], 8: [7, 16, 17], 13: [12, 13, 31, 32, 103], 24: [22, 24], 26: [14, 26, 27, 36, 37, 38, 88], 43: [42, 46, 70], 44: [44], 48: [43, 45, 48, 60, 65, 170, 174, 190], 50: [50], 53: [52, 53, 54, 56, 66, 67, 169, 194], 55: [2, 51, 55, 63, 64, 68, 188], 61: [61, 62, 175, 176, 177, 203, 204, 216], 75: [11, 20, 23, 33, 34, 35, 73, 74, 75, 82], 78: [77, 78, 83, 86, 99, 102, 105, 113, 116, 125], 81: [58, 80, 81, 85, 89, 90, 180, 193, 288, 291, 292, 293], 105: [91, 100, 101, 104, 106, 108, 109, 110, 111, 112, 114, 118, 119, 123, 124, 129], 124: [94, 121, 122, 126], 130: [8, 130, 135, 138, 141, 142, 157], 146: [146, 153], 152: [3, 21, 47, 57, 133, 137, 139, 144, 147, 149, 152, 158, 159, 162], 160: [29, 95, 96, 97, 98, 107, 115, 117, 131, 136, 140, 145, 150, 154, 155, 156, 160, 161, 163, 164], 165: [165, 166], 166: [132, 151, 167], 178: [173, 179, 181, 182, 183, 184, 186, 187, 191, 192, 195, 196, 197, 198, 205, 214, 223, 227], 207: [202, 206, 207, 209, 210, 211, 215], 232: [200, 224, 228, 229, 230, 231, 232, 240], 250: [213, 233, 245, 246, 250, 251], 271: [30, 41, 49, 178, 189, 201, 237, 238, 239, 241, 242, 247, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267], 291: [1, 4, 5, 9, 15, 18, 19, 25, 28, 39, 40, 59, 71, 72, 76, 79, 84, 87, 92, 93, 120, 127, 128, 134, 143, 148, 168, 171, 172, 185, 199, 208, 212, 217, 218, 219, 220, 221, 222, 225, 226, 234, 235, 236, 243, 244, 248, 249, 255, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 294, 295, 296, 297, 298, 299]})
dataset8 lp_global:
'11.82 seconds, Z : 6899.562087552378', [13, 68, 55, 7, 77, 17, 36, 54, 24, 26, 27, 144, 35, 42, 44, 48, 53, 61, 69, 153, 75, 78, 81, 104, 130, 160, 146, 152, 155, 50]
dataset8 with lp ifs:
('IFS took 0.14 seconds. Total time: 27.6 seconds, Z : 14388.795641053493', [13, 144, 55, 78, 271, 16, 23, 217, 18, 75, 26, 42, 48, 45, 50, 53, 61, 69, 81, 126, 160, 150, 166, 105, 130, 165, 251, 187, 230, 291], {13: [0, 13], 16: [6, 7, 14, 16, 27], 18: [17], 23: [10, 11, 22, 23, 24, 32, 173, 180, 193], 26: [26, 36, 37], 42: [42, 70], 45: [44, 45, 220], 48: [43, 46, 48], 50: [50, 62, 172, 275], 53: [53, 54], 55: [2, 12, 21, 31, 40, 41, 47, 51, 52, 55, 56, 63, 68], 61: [60, 61, 181, 182, 203, 205, 216], 69: [69], 75: [18, 30, 33, 34, 35, 73, 74, 75, 90, 185, 217, 268], 78: [3, 38, 77, 78, 83, 88, 89, 133, 158, 221], 81: [80, 81, 82, 85, 234, 249, 284, 285, 286, 289, 291, 292, 293], 105: [99, 100, 101, 104, 106, 107, 108, 109, 111, 114, 127], 126: [86, 91, 94, 110, 112, 113, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 129, 294, 295, 297], 130: [130, 135], 144: [1, 5, 8, 29, 140, 144, 147, 152, 164], 150: [97, 102, 141, 145, 146, 150, 153], 160: [95, 96, 105, 117, 155, 159, 160, 161, 248], 165: [149, 165], 166: [98, 103, 131, 132, 136, 137, 138, 139, 142, 151, 154, 156, 157, 162, 163, 166, 167, 278], 187: [179, 186, 187, 191, 192, 196, 283, 288], 217: [15, 19, 20, 49, 57, 58, 64, 65, 66, 67, 84, 87, 93, 120, 169, 170, 171, 174, 175, 176, 177, 178, 183, 184, 188, 189, 190, 194, 197, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 215, 218, 272, 279, 282, 296, 298], 230: [195, 198, 200, 223, 224, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 241, 242, 299], 251: [168, 211, 240, 245, 246, 250, 251, 252, 253, 255, 256], 271: [4, 9, 25, 28, 39, 59, 71, 72, 76, 79, 92, 128, 134, 143, 148, 199, 208, 219, 222, 225, 226, 235, 236, 243, 244, 247, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 280, 281], 291: [287, 290]})

dataset 7 ?? lp??
('2.44 seconds, Z : 11246.788341566307', [14, 15, 18, 19, 20, 21, 24, 30, 38, 41, 42, 53, 64, 70, 71, 72, 79, 85, 89, 90, 100, 109, 117, 123, 125, 129, 132, 137, 139, 143, 153, 155, 177, 192, 197], {14: [10, 11, 14, 23, 28, 39, 54, 56, 58, 63, 65, 78, 82, 104, 116, 121, 122, 128, 134, 169, 175, 188], 15: [11, 15, 18, 22, 25, 27, 49, 51, 61, 63, 76, 77, 86, 88, 111, 114, 116, 117, 118, 127, 133, 136, 148, 158, 166, 171, 175, 182, 188, 189, 191, 193, 198], 18: [8, 18, 28, 65, 76, 78, 82, 97, 111, 118, 121, 127, 136, 141, 157, 162, 188, 189, 198], 19: [0, 7, 8, 12, 19, 28, 32, 40, 59, 82, 94, 96, 104, 108, 114, 123, 134, 154, 167, 179, 181, 182, 183, 184, 187, 193, 196, 199], 20: [11, 19, 20, 23, 28, 31, 45, 63, 65, 70, 71, 78, 84, 85, 86, 88, 116, 120, 128, 133, 139, 143, 175, 179, 181, 185, 195, 197], 21: [7, 21, 49, 65, 66, 71, 75, 76, 86, 93, 97, 111, 115, 125, 135, 146, 162, 171, 173, 197], 24: [3, 10, 17, 21, 24, 28, 30, 36, 40, 43, 51, 63, 65, 76, 77, 78, 84, 93, 113, 120, 125, 133, 165, 169, 173, 184, 193, 196], 30: [3, 28, 30, 36, 54, 55, 58, 63, 65, 69, 83, 84, 93, 99, 118, 124, 133, 138, 143, 155, 165, 167, 169, 175, 181, 182, 184, 193, 199], 38: [3, 5, 18, 21, 32, 36, 38, 41, 65, 78, 81, 84, 86, 104, 113, 121, 139, 146, 147, 164, 165, 168, 171, 184, 196, 197], 41: [1, 4, 7, 11, 26, 41, 43, 45, 50, 66, 74, 77, 97, 110, 112, 117, 134, 136, 145, 147, 151, 174, 194, 195], 42: [2, 11, 13, 23, 26, 28, 37, 42, 63, 70, 71, 73, 76, 84, 116, 117, 145, 146, 147, 149, 168, 170, 175, 180, 182], 53: [3, 4, 28, 36, 39, 53, 61, 63, 66, 71, 75, 77, 78, 80, 84, 91, 104, 113, 117, 121, 127, 128, 141, 145, 154, 155, 162, 169, 184, 186, 189, 195], 64: [4, 8, 12, 13, 27, 51, 58, 59, 64, 66, 71, 77, 78, 91, 110, 116, 121, 132, 145, 159, 181, 184, 187, 195, 197], 70: [11, 13, 16, 27, 32, 48, 70, 77, 86, 91, 98, 102, 121, 127, 131, 132, 146, 167, 168, 194, 198], 71: [11, 36, 71, 84, 138, 151, 175, 186, 191, 193, 196, 197, 199], 72: [10, 23, 29, 33, 35, 44, 46, 63, 65, 72, 86, 95, 100, 101, 116, 125, 129, 132, 135, 142, 173, 175, 178, 188, 197], 79: [2, 7, 23, 44, 50, 79, 85, 87, 95, 105, 127, 134, 137, 161, 178, 181, 191, 193, 197], 85: [29, 62, 77, 84, 85, 95, 101, 120, 121, 132, 146, 147, 161, 165, 169, 175, 184], 89: [2, 8, 9, 28, 44, 63, 77, 78, 81, 89, 93, 95, 111, 118, 135, 147, 157, 161, 178, 184], 90: [11, 15, 28, 33, 34, 35, 40, 44, 45, 54, 63, 70, 77, 81, 90, 95, 121, 129, 142, 146, 161, 163, 165, 169, 175, 178, 193], 100: [11, 13, 26, 32, 51, 56, 65, 68, 71, 76, 96, 100, 107, 119, 121, 135, 141, 150, 167, 170], 109: [12, 23, 26, 32, 67, 68, 78, 96, 100, 109, 125, 131, 146, 150, 162, 165, 167, 176, 189, 197], 117: [6, 32, 37, 46, 51, 61, 76, 80, 114, 116, 117, 151, 159, 165], 123: [14, 21, 26, 34, 40, 50, 60, 81, 94, 105, 122, 123, 125, 126, 128, 141, 142, 144, 152, 160, 163, 174, 188, 189], 125: [2, 11, 33, 45, 60, 65, 84, 93, 103, 118, 121, 125, 133, 151, 169, 184, 188, 196], 129: [11, 28, 36, 39, 54, 55, 58, 74, 122, 129, 146, 156, 161, 165], 132: [11, 23, 49, 84, 132, 138, 151, 154, 186, 193, 196, 199], 137: [23, 33, 50, 56, 58, 70, 84, 87, 97, 105, 111, 121, 122, 128, 134, 137, 142, 147, 167, 173, 185], 139: [22, 50, 56, 57, 58, 92, 93, 97, 105, 122, 125, 128, 139, 161, 194], 143: [23, 47, 51, 78, 88, 114, 130, 143, 165, 169, 172, 196, 199], 153: [10, 28, 41, 61, 78, 82, 87, 121, 132, 135, 139, 148, 153, 162, 165, 179, 180, 181, 185, 188, 196, 199], 155: [6, 11, 14, 28, 37, 63, 69, 77, 91, 106, 140, 146, 155, 169, 175, 179, 180, 182, 197], 177: [11, 15, 16, 23, 28, 46, 58, 63, 78, 88, 108, 109, 125, 128, 130, 133, 145, 148, 159, 162, 168, 173, 175, 177, 182, 184], 192: [11, 21, 27, 28, 29, 41, 47, 52, 59, 63, 66, 67, 69, 71, 77, 89, 98, 104, 125, 128, 132, 145, 176, 190, 192, 195], 197: [11, 23, 86, 93, 96, 111, 127, 133, 141, 151, 160, 169, 173, 178, 179, 184, 189, 197]})

dataset8 with new clustering d_cluster:
('IFS took 0.18 seconds. Total time: 22.38 seconds, Z : 14388.795641053493', [2, 39, 26, 17, 130, 13, 81, 61, 23, 105, 75, 78, 70, 48, 45, 50, 53, 55, 118, 160, 134, 144, 146, 143, 181, 180, 229, 246, 270, 291], {2: [0, 10, 69, 173], 13: [13, 32, 33, 59, 244], 17: [7, 16, 17, 138], 23: [22, 24, 73], 26: [3, 11, 12, 26, 27, 36, 37, 98, 168, 298], 39: [1, 2, 4, 5, 6, 9, 14, 15, 18, 19, 23, 25, 28, 30, 31, 34, 39, 40, 41, 47, 56, 57, 72, 76, 79, 84, 90, 92, 93, 120, 128, 131, 140, 148, 164, 171, 178, 263, 272, 276, 277, 278, 296], 45: [44, 45], 48: [43, 48, 52, 60, 64, 66, 71], 50: [50, 63, 65, 87, 169, 205], 53: [51, 53, 54, 157, 170, 174, 188, 190], 55: [55, 58, 68, 133], 61: [21, 61, 62, 67, 176, 177, 181, 182, 194, 204, 214, 216, 234], 70: [42, 46, 70], 75: [35, 75, 82, 89, 180, 185], 78: [38, 77, 78, 83, 86, 88, 102, 103, 105, 115, 127, 134], 81: [20, 74, 80, 81, 85, 264, 283, 285, 286, 288, 291, 292, 293, 295], 105: [29, 49, 95, 99, 100, 101, 104, 106, 107, 108, 110, 111, 112, 116, 123, 124, 125, 129, 143, 149, 162, 172, 189, 199, 208, 212, 217, 218, 219, 220, 221, 222, 225, 226, 235, 236, 248, 249, 268, 269, 270, 271, 273, 274, 275, 279, 280, 281], 118: [91, 94, 109, 113, 114, 118, 119, 121, 122, 126, 294, 297], 130: [8, 130, 135, 141, 163], 134: [132, 142, 151, 165, 166], 143: [167], 144: [136, 137, 139, 144, 147, 152, 158, 159], 146: [146, 153], 160: [96, 97, 117, 145, 150, 154, 155, 156, 160, 161], 180: [179, 186, 187, 195, 198, 201, 224, 227, 284], 181: [175, 183, 184, 196, 202, 203, 206, 207, 209, 210, 211, 213, 215], 229: [191, 192, 193, 223, 228, 229, 230, 231, 232, 299], 246: [197, 200, 237, 251, 257], 270: [233, 238, 239, 240, 241, 242, 245, 246, 247, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 265, 266, 267, 282], 291: [243, 287, 289, 290]})


dataset9 with approx and 5% gap allowed:
('IFS took 0.22 seconds. Total time: 340.13 seconds, Z : 21667.572545165276', [135, 108, 210, 293, 200, 123, 6, 102, 164, 10, 11, 85, 82, 76, 201, 55, 247, 86, 28, 144, 29, 63, 77, 2, 140, 36, 23, 106, 113, 49, 288, 296, 71, 273, 237, 260, 119, 132, 19, 281, 136, 62, 61, 130, 241, 73, 37, 159, 162, 259], {2: [34, 42, 187, 216, 246], 6: [6, 81, 113, 115, 189, 279, 283], 10: [10, 37, 51, 58, 110, 175, 201, 206, 226, 294], 11: [11, 43, 185, 284, 290], 19: [104, 143, 151, 184, 212], 23: [40, 78, 215, 263, 295, 298], 28: [22, 28, 75, 83, 97, 99, 112, 267, 278], 29: [29, 46, 59, 64, 134, 158, 173], 36: [36, 117, 228, 271, 291], 37: [156, 169, 197, 239, 265, 281], 49: [49, 61, 62, 95, 133, 155, 198, 243, 257], 55: [16, 55, 57, 90, 171, 204, 242, 287], 61: [128, 138, 203, 297], 62: [120, 126, 227, 275], 63: [32, 54, 103, 123, 285], 71: [71, 88, 168, 179, 245, 251, 254, 268], 73: [153, 162, 170], 76: [14, 30, 76, 220, 244, 292, 296], 77: [33, 77, 165, 266], 82: [13, 26, 79, 82, 142, 196], 85: [12, 38, 41, 70, 139, 152, 262], 86: [21, 67, 86, 166, 181, 224], 102: [7, 102, 145, 221, 264], 106: [44, 65, 106, 191, 222, 229], 108: [1, 108, 223, 253], 113: [47, 69, 124, 176, 232], 119: [84, 121, 199, 234, 252], 123: [5, 96, 101, 258, 277], 130: [130, 177, 272, 288], 132: [87, 92, 94, 98, 132], 135: [0, 25, 48, 135, 157, 211], 136: [119, 136, 147, 250, 289], 140: [35, 53, 140, 182, 213], 144: [27, 39, 144, 160, 230], 159: [159, 202, 208], 162: [183, 194, 248], 164: [8, 63, 91, 164, 280], 200: [4, 17, 23, 24, 149, 163, 167, 200, 209], 201: [15, 100, 118, 178], 210: [2, 18, 19, 45, 50, 60, 73, 85, 105, 107, 122, 129, 131, 154, 180, 186, 210, 218, 231, 236, 241, 270, 276], 237: [74, 225, 237, 238], 241: [148, 207, 256, 282], 247: [20, 66, 68, 109, 174, 205, 247], 259: [190, 214, 217, 249, 259, 274, 299], 260: [80, 93, 111, 219, 240, 260, 261], 273: [72, 192, 193, 233, 273], 281: [114, 137, 141, 188, 255], 288: [52, 89, 116, 172, 195], 293: [3, 9, 31, 127, 150, 161, 235, 286, 293], 296: [56, 125, 146, 269]})
Best objective 2.166757254517e+04, best bound 2.087690590102e+04, gap 3.6491%

approximation 1
dataset8 with approx and 5% gap allowed, <= lp_val , (>=z_val not used)
('IFS took 0.13 seconds. Total time: 13.01 seconds, Z : 15271.914090905562', [13, 16, 24, 26, 43, 44, 48, 50, 53, 54, 55, 61, 69, 75, 78, 81, 104, 108, 123, 130, 134, 144, 150, 155, 166, 186, 212, 239, 256, 291], {13: [1, 3, 4, 5, 9, 11, 12, 13, 14, 15, 18, 19, 21, 25, 28, 30, 33, 39, 40, 41, 49, 57, 58, 59, 71, 72, 76, 79, 84, 87, 92, 93, 120, 128, 134, 143, 148, 157, 164, 171, 172, 185, 199, 208, 212, 217, 218, 219, 220, 221, 222, 225, 226, 235, 236, 244, 248, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 296], 16: [6, 7, 16, 17], 24: [22, 23, 24, 32, 34, 35], 26: [26, 27, 36, 37], 43: [42, 46, 70], 44: [44, 45], 48: [43, 47, 48, 52, 65, 66, 168], 50: [50, 62, 63], 53: [20, 53, 56, 64, 67], 54: [51, 54, 178, 188, 190], 55: [2, 31, 55, 68, 189], 61: [60, 61, 169, 170, 174, 175, 176, 181, 182, 194, 204, 205, 216], 69: [0, 10, 69], 75: [73, 74, 75, 80, 90, 234, 249], 78: [29, 38, 77, 78, 88, 99, 127, 133], 81: [81, 82, 85, 180, 285, 286, 288, 291, 292, 293, 295, 297, 298], 104: [83, 86, 89, 91, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 124, 125, 129, 294], 108: [101, 111, 113, 117], 123: [94, 118, 119, 121, 122, 123, 126], 130: [130, 131, 135, 137, 138, 139, 140, 141, 149, 162, 163], 134: [132, 165], 144: [8, 144, 152], 150: [146, 150, 153, 156], 155: [95, 96, 97, 102, 115, 116, 136, 145, 147, 151, 154, 155, 158, 159, 160, 161], 166: [142, 166, 167], 186: [173, 177, 179, 183, 184, 186, 187, 191, 192, 193, 195, 196, 197, 198, 200, 211, 214, 223, 224, 227, 283, 284], 212: [202, 203, 206, 207, 209, 210, 213, 215], 239: [201, 228, 229, 230, 231, 232, 233, 238, 239, 241, 243, 247, 262, 265, 266], 256: [237, 240, 242, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 267], 291: [287, 289, 290, 299]})

approximation 2
dataset8 with approx and 5% gap allowed, <= lp_val , (>=z_val not used), z_j[j].start = 1 instead of constraint:
('IFS took 0.12 seconds. Total time: 14.47 seconds, Z : 14651.970242940026', [2, 13, 16, 24, 26, 43, 44, 48, 50, 53, 55, 61, 75, 78, 81, 105, 123, 139, 140, 146, 152, 155, 165, 180, 182, 217, 235, 251, 271, 291], {2: [0, 69, 173], 13: [4, 5, 9, 11, 12, 13, 14, 21, 28, 31, 40, 59, 76, 84, 87, 92, 93, 120, 128, 134, 143, 148, 157, 171, 172, 185, 219, 220, 222, 226, 236, 244, 248, 263, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279], 16: [6, 7, 16, 17, 27, 98, 131, 138, 139, 140, 158, 162], 24: [10, 22, 24, 35], 26: [23, 26, 36, 37, 127], 43: [42, 46, 70], 44: [30, 41, 44, 45, 235], 48: [43, 48, 52, 58, 64, 65, 221], 50: [20, 50, 205], 53: [51, 53, 54, 56, 62, 170, 178, 188, 189, 190, 194], 55: [2, 3, 15, 19, 39, 55, 57, 63, 68, 168], 61: [47, 61, 169, 174, 176, 177, 182, 197, 203, 204, 214, 216], 75: [1, 32, 33, 34, 49, 74, 75, 82, 90, 180, 249, 288, 294], 78: [29, 38, 77, 78, 83, 88, 99, 103, 105, 116, 297], 81: [71, 80, 81, 85, 86, 89, 193, 199, 212, 234, 269, 284, 286, 291, 293, 296, 298], 105: [100, 101, 104, 106, 108, 110, 111, 117], 123: [91, 94, 109, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 129], 139: [132, 167], 140: [130, 141, 147], 146: [135, 146, 150, 151, 153, 154, 156, 159], 152: [8, 95, 144, 152], 155: [96, 97, 102, 107, 145, 155, 160, 161], 165: [18, 25, 72, 79, 133, 136, 137, 142, 149, 163, 164, 165, 166, 208, 217, 218, 225, 280, 281, 282], 180: [73, 179, 186, 187, 191, 192, 198, 223, 224, 289], 182: [67, 175, 196], 217: [60, 66, 181, 183, 184, 202, 206, 207, 209, 210, 211, 213, 215], 235: [195, 200, 227, 228, 229, 230, 231, 232, 237, 238, 242, 243, 247, 252], 251: [201, 233, 239, 240, 245, 246, 250, 251, 254, 256, 257], 271: [241, 253, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267], 291: [283, 285, 287, 290, 292, 295, 299]})

approximation goodness: approx. 1 is within 6.137 % of global optimum.
                        approx. 2 is within 1.827 % of global optimum !!
###

DATASET 7

basimin belasi dataset 7 icin approx %5 gap allowed, >= lp_val, <=z_val not used, z_J[j] == 1 constraint
with MIPFocus = 1
Explored 35071 nodes (11449506 simplex iterations) in 605.66 seconds (792.62 work units)
Thread count was 8 (of 8 available processors)

Solution count 10: 32299.4 32406.6 32441.1 ... 34222.8

Solve interrupted
Best objective 3.229940191397e+04, best bound 2.922944781403e+04, gap 9.5047%

Model Is Infeasible
###

###
same with MIPFocus = 2 instead:
Explored 3990 nodes (2661820 simplex iterations) in 609.67 seconds (710.61 work units)
Thread count was 8 (of 8 available processors)

Solution count 10: 32299.4 32406.6 32441.1 ... 35122.1

Solve interrupted
Best objective 3.229940191397e+04, best bound 2.942742461517e+04, gap 8.8917%

Model Is Infeasible
###

###
same but without >= lp:
Explored 4902 nodes (2442203 simplex iterations) in 604.48 seconds (694.73 work units)
Thread count was 8 (of 8 available processors)

Solution count 10: 32299.4 32382.2 32406.6 ... 36694.8

Solve interrupted
Best objective 3.229940191397e+04, best bound 2.948484573706e+04, gap 8.7140%

Model Is Infeasible
###

BACK TO DATASET 8
- approx function used
- updated Z>= constraints
- >= lp_val
- no MIPFocus, No Heuristics
- z_j.start = 1 instead of constraints

('IFS took 0.13 seconds. Total time: 24.99 seconds, Z : 14625.378114770232', [0, 13, 16, 17, 23, 26, 45, 48, 50, 53, 55, 61, 70, 75, 78, 81, 104, 124, 139, 140, 144, 150, 160, 165, 181, 186, 228, 250, 271, 291], {0: [0, 69], 13: [3, 11, 12, 13, 21, 23], 16: [6, 7, 16, 27, 139], 17: [8, 17], 23: [2, 10, 22, 24, 31, 32, 35, 73, 178], 26: [14, 26, 36, 37, 164], 45: [44, 45], 48: [43, 48, 57, 58, 66], 50: [50, 62], 53: [20, 53, 54, 56, 63, 65, 67, 170, 177, 244], 55: [15, 47, 51, 52, 55, 64, 68, 84, 168, 189, 236], 61: [60, 61, 169, 174, 181, 182, 190, 203, 204, 205, 216], 70: [42, 46, 70], 75: [1, 4, 30, 33, 34, 41, 74, 75, 90, 172, 185, 226, 270, 274, 281, 282, 298], 78: [29, 38, 77, 78, 83, 88, 92, 99, 103, 127, 225], 81: [18, 19, 40, 71, 80, 81, 82, 85, 89, 93, 134, 157, 199, 234, 276, 278, 285, 286, 293, 294, 295], 104: [86, 91, 100, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 123, 124, 125, 129], 124: [94, 111, 117, 119, 121, 122, 126], 139: [136, 147, 149, 151, 162, 167], 140: [130, 135], 144: [5, 9, 39, 49, 72, 76, 98, 120, 128, 131, 140, 143, 144, 152, 158, 171, 212, 217, 219, 220, 222, 235, 269, 271, 272, 273, 277, 296], 150: [141, 145, 146, 153, 163], 160: [25, 28, 59, 79, 87, 95, 96, 97, 101, 102, 107, 133, 148, 150, 154, 155, 156, 159, 160, 161, 208, 218, 221, 248, 263, 268, 275, 279, 280], 165: [132, 137, 138, 142, 165, 166], 181: [175, 183, 202, 206, 207, 209], 186: [173, 176, 179, 180, 184, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 200, 223, 227, 288], 228: [224, 228, 229, 230, 231, 232, 289], 250: [201, 210, 211, 213, 214, 215, 233, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 264], 271: [257, 258, 259, 260, 261, 262, 265, 266, 267], 291: [193, 283, 284, 287, 290, 291, 292, 297, 299]})

DATASET 7
- approx function
- updated Z >= constraints (quicksum for each node)
-  model.setParam("MIPGap", 0.05)
    model.setParam("MIPFocus", 2)
    model.setParam("Heuristics", 0.3)
    # idk anymore
    model.setParam("GomoryPasses", 5)
    model.setParam("FlowCoverCuts", 2)
    model.setParam("CliqueCuts", 2)

- >= lp_val
- z_j[j].start

('IFS took 0.48 seconds. Total time: 689.85 seconds, Z : 28377.846324201564', [2, 4, 18, 21, 25, 30, 31, 35, 45, 57, 63, 90, 91, 92, 99, 106, 114, 116, 120, 122, 125, 129, 135, 138, 149, 153, 161, 163, 164, 168, 172, 186, 187, 193, 197], {2: [78, 89, 118, 141, 178], 4: [48, 53, 158, 187, 192, 195], 18: [18, 82, 115, 136, 160, 162, 198], 21: [7, 8, 21, 96, 100, 131, 140], 25: [15, 25, 52, 68, 88, 148, 177], 30: [3, 38, 99, 113, 126, 145], 31: [0, 5, 17, 20, 31, 57, 69, 102, 106, 107, 150], 35: [22, 60, 67, 79, 135, 157, 163, 170, 171], 45: [65, 86, 103, 121, 188], 57: [97, 128, 134, 185], 63: [2, 28, 45, 63, 111], 90: [29, 55, 62, 90, 120, 147, 152, 156], 91: [46, 75, 77, 146, 168, 176], 92: [110, 139, 167, 194], 99: [24, 30, 74, 104, 183], 106: [37, 61, 155, 180, 182], 114: [114, 143, 159, 165], 116: [32, 47, 80, 116, 117], 120: [35, 81, 85, 92, 101, 124, 175], 122: [10, 50, 119, 122, 181], 125: [23, 125, 179, 184], 129: [14, 39, 40, 129, 166], 135: [1, 56, 83, 105, 137, 189], 138: [71, 130, 138, 191], 149: [6, 13, 16, 27, 42, 73, 98, 149, 164], 153: [12, 41, 59, 153], 161: [9, 66, 94, 123, 142, 161, 174, 190], 163: [34, 44, 72, 87, 95, 144], 164: [11, 36, 54, 58], 168: [26, 43, 70, 91, 109], 172: [51, 169, 196, 199], 186: [49, 133, 151, 186, 193], 187: [4, 19, 64, 108], 193: [33, 76, 84, 132, 154], 197: [93, 112, 127, 172, 173, 197]})
Optimal solution found (tolerance 5.00e-02)
Best objective 2.837784632420e+04, best bound 2.717048781307e+04, gap 4.2546%
Explored 3004 nodes (2127620 simplex iterations) in 688.02 seconds (825.60 work units)

DATASET 9, 20% gap allowed, cutoff z_val, >= lp_val, z_j.start:
-   model.setParam("Cutoff", z_val)
    model.setParam("GomoryPasses", 5)
    model.setParam("FlowCoverCuts", 2)
    model.setParam("CliqueCuts", 2)
- MIPFocus and Heuritics not used

Optimal solution found (tolerance 2.00e-01)
Best objective 2.082697990588e+04, best bound 1.666182512737e+04, gap 19.9988%

('IFS took 0.23 seconds. Total time: 192.35 seconds, Z : 20826.979905881697', [1, 2, 6, 13, 20, 23, 29, 32, 59, 61, 62, 63, 67, 76, 78, 97, 106, 107, 108, 113, 123, 130, 132, 135, 136, 138, 165, 183, 193, 199, 200, 201, 218, 227, 237, 239, 241, 248, 249, 251, 257, 259, 261, 262, 269, 278, 280, 286, 288, 291], {1: [59, 67, 115, 166, 201, 223, 281], 2: [34, 42, 142, 187], 6: [0, 6, 92, 171, 279], 13: [13, 82, 140], 20: [20, 64, 188, 205, 247], 23: [40, 78, 215, 295, 298], 29: [16, 29, 66, 111, 134, 158, 161, 173, 287], 32: [10, 21, 32, 60, 105, 110, 181, 186, 195, 226, 245, 265, 294], 59: [98, 137, 141, 160, 169], 61: [61, 128, 203, 297], 62: [120, 151, 185, 284], 63: [44, 54, 58, 68, 103, 174, 231, 285], 67: [86, 144, 224, 230], 76: [4, 14, 30, 76, 114, 244, 292], 78: [12, 17, 38, 41, 47, 70, 263], 97: [28, 45, 50, 75, 85, 95, 97, 99, 122, 204, 216, 246, 276], 106: [106, 191, 222, 293], 107: [104, 119, 143, 184, 212], 108: [1, 63, 73, 101, 108, 253], 113: [69, 91, 176, 232, 236], 123: [5, 96, 123, 277], 130: [3, 130, 157, 272, 288], 132: [87, 94, 132, 255], 135: [48, 90, 135, 211, 242], 136: [127, 136, 147, 271, 289], 138: [11, 138, 262, 290], 165: [49, 53, 62, 133, 155, 163, 165, 274], 183: [83, 183, 218, 241, 248], 193: [72, 193, 233, 264, 273], 199: [74, 84, 199, 234, 235], 200: [23, 51, 125, 149, 152, 198, 200, 220, 283, 296], 201: [15, 100, 118, 178], 218: [9, 19, 93, 107, 182, 210, 250, 252], 227: [126, 148, 207, 270, 275], 237: [121, 225, 237, 238], 239: [37, 109, 156, 196, 197, 206, 239, 258], 241: [35, 227, 256, 282], 248: [2, 129, 131, 153, 162, 170, 194], 249: [33, 77, 180, 213, 266], 251: [71, 117, 168, 179, 251, 268], 257: [124, 139, 167, 175, 189, 209, 219, 240], 259: [26, 27, 79, 81, 112, 190, 214, 217, 243, 249, 254, 259, 299], 261: [18, 31, 46, 80, 260, 261], 262: [43, 159, 202, 208], 269: [24, 56, 113, 146, 154, 269], 278: [7, 65, 102, 145, 192, 221], 280: [8, 39, 164, 257, 280], 286: [25, 55, 57, 172, 177], 288: [52, 89, 116, 229, 286], 291: [22, 36, 88, 150, 228, 267, 278, 291]})
same thing took 167.38 seconds instead, when z_j.start not used (it's unnecessary I guess)

DATASET 9 WITH PREVIOUS IFS FROM 20% GAP ALLOWED SOLUTION
- MIPFocus = 2, Heuristics = 0.3, lp_val not used, z_j.start not used, cutoff not used.
Explored 10859 nodes (8660410 simplex iterations) in 745.02 seconds (808.99 work units)

('IFS took 0.3 seconds. Total time: 745.76 seconds, Z : 18476.200908195387', [2, 8, 13, 20, 23, 28, 32, 44, 50, 59, 62, 67, 76, 101, 105, 108, 113, 127, 128, 132, 134, 147, 161, 174, 180, 183, 193, 200, 201, 214, 218, 227, 234, 237, 238, 241, 251, 254, 261, 262, 263, 266, 269, 272, 278, 280, 285, 288, 290, 291], {2: [34, 42, 142, 187, 216], 8: [8, 17, 39, 164], 13: [13, 82, 140], 20: [20, 156, 188, 205, 247], 23: [40, 78, 112, 149, 154, 196, 215, 295], 28: [18, 22, 28, 75, 97, 99, 267], 32: [10, 32, 58, 68, 110, 122, 195, 201, 226, 246, 265, 294], 44: [25, 48, 90, 135, 161, 242, 287], 50: [6, 124, 189, 279], 59: [0, 115, 137, 141, 160, 169], 62: [120, 185, 275, 284], 67: [1, 27, 59, 86, 166, 224], 76: [14, 30, 37, 51, 76, 114, 175, 209, 244, 292], 101: [197, 239, 253, 281], 105: [65, 106, 157, 191, 286, 293], 108: [73, 101, 108, 174, 206, 223, 257, 258], 113: [47, 69, 91, 176, 186, 232], 127: [84, 199, 235], 128: [49, 61, 81, 105, 128, 163, 231, 241, 243, 245, 297, 298], 132: [87, 94, 98, 132, 255], 134: [29, 64, 66, 92, 134, 158, 173], 147: [93, 136, 147, 250, 271], 161: [55, 57, 111, 177, 211], 174: [5, 63, 96, 123, 277], 180: [77, 133, 155, 165, 190, 274], 183: [153, 170, 183, 194], 193: [72, 193, 221, 229, 273], 200: [4, 21, 23, 24, 38, 45, 85, 113, 129, 152, 198, 200, 220, 296], 201: [15, 16, 100, 118, 171, 178], 214: [2, 180, 214, 217, 259, 299], 218: [19, 26, 44, 62, 83, 95, 107, 182, 204, 210, 218, 236, 252, 254, 270], 227: [43, 53, 126, 148, 227], 234: [3, 74, 119, 127, 143, 289], 237: [121, 225, 237, 238], 238: [104, 151, 184, 212, 234], 241: [35, 207, 256, 282], 251: [71, 117, 168, 179, 251, 268, 276, 278], 254: [162, 248], 261: [31, 46, 80, 219, 260, 261], 262: [139, 159, 202, 208], 263: [12, 41, 50, 60, 70, 131, 240, 263], 266: [33, 213, 249, 266], 269: [56, 79, 125, 146, 167, 269, 283], 272: [130, 150, 172, 272, 288], 278: [7, 102, 145, 192, 233, 264], 280: [67, 144, 230, 280], 285: [54, 103, 109, 285], 288: [52, 89, 116, 222], 290: [11, 138, 203, 262, 290], 291: [9, 36, 88, 181, 228, 291]})

DATASET 10 WITH 20% GAP ALLOWED (PHASE 1)

same parameters and conditions as before (dataset 9)

Optimal solution found (tolerance 2.00e-01)
Best objective 2.050680672362e+04, best bound 1.640608483810e+04, gap 19.9969%

('IFS took 1.57 seconds. Total time: 225.51 seconds, Z : 20506.80672362228', [9, 13, 14, 24, 25, 26, 29, 38, 40, 60, 63, 66, 74, 75, 82, 84, 87, 93, 95, 101, 107, 112, 115, 117, 122, 132, 144, 147, 155, 157, 161, 163, 170, 172, 175, 180, 182, 215, 228, 232, 237, 241, 242, 248, 249, 253, 256, 267, 268, 299], {9: [9, 12, 83, 148, 194, 295], 13: [13, 104, 114, 217, 278], 14: [14, 42, 137, 240, 274], 24: [7, 24, 36, 37, 53, 88, 153, 183, 203, 245], 25: [3, 211, 227, 231, 262, 289], 26: [56, 125, 166, 200, 204], 29: [64, 96, 143, 265, 271], 38: [38, 59, 67, 146, 273, 282], 40: [40, 103, 118, 133], 60: [11, 60, 98, 102, 110, 142, 201], 63: [44, 61, 63, 188, 195, 238], 66: [31, 126, 129, 149, 224], 74: [22, 25, 74, 78, 152, 233, 288, 292], 75: [45, 55, 75, 79, 85, 100, 229], 82: [82, 130, 187, 216], 84: [1, 15, 20, 35, 257, 280], 87: [87, 91, 178, 184, 196, 208], 93: [68, 93, 219, 244], 95: [95, 179, 252, 284, 294, 297], 101: [4, 8, 101, 181, 279], 107: [28, 34, 225], 112: [97, 154, 173, 210, 213, 290], 115: [32, 123, 139, 168, 185], 117: [50, 77, 99, 157, 239, 258], 122: [29, 57, 90, 281], 132: [58, 120, 132, 151, 177, 260], 144: [21, 76, 131, 259, 261, 296], 147: [52, 84, 138, 147, 165, 191, 205, 269], 155: [106, 155, 161, 164, 176, 190, 277], 157: [18, 51, 109, 169], 161: [16, 41, 89, 124, 223, 250, 298], 163: [107, 163, 214, 275], 170: [26, 145, 170, 226, 264, 266, 283, 293], 172: [46, 119, 156, 172, 209, 220, 247, 270, 285], 175: [66, 128, 134, 171, 197, 254, 291], 180: [108, 121, 150, 199], 182: [23, 27, 48, 69, 72, 182], 215: [141, 158, 180, 215, 246], 228: [39, 71, 115, 206, 228, 287], 232: [0, 10, 33, 116, 140, 160, 162, 167, 174, 192, 207, 232, 243], 237: [65, 113, 127, 193, 237], 241: [80, 105, 117, 122, 202, 221, 241, 276], 242: [6, 62, 92, 112, 189, 236, 242, 286], 248: [30, 111, 136, 198, 248, 255, 272], 249: [19, 47, 81, 186, 230, 249], 253: [2, 5, 17, 175, 253], 256: [49, 70, 159, 235, 256, 263], 267: [43, 94, 234, 267], 268: [54, 135, 144, 212, 268], 299: [73, 86, 218, 222, 251, 299]})

IMPORTANT NOTE: DON'T SET MIPFOCUS AT ALL (SOMETIMES) GUROBI IS WAY BETTER AT FINDING BOUNDS ON ITS OWN

DATASET 10 PHASE 2

########
Explored 6957 nodes (6468586 simplex iterations) in 800.02 seconds (764.09 work units)
Thread count was 8 (of 8 available processors)

Solution count 6: 19407.7 19540.7 20398.4 ... 20508.6

Time limit reached
Best objective 1.940768146894e+04, best bound 1.899239524125e+04, gap 2.1398%

Model Is Infeasible
#########
since there is no better objective value than 19407, I will just get the solution for that
(I set the time limit to 200 bc I know it finds that solution in 180secs or smt)
Time limit reached
Best objective 1.940768146894e+04, best bound 1.873705474601e+04, gap 3.4555%

('IFS took 0.63 seconds. Total time: 201.1 seconds, Z : 19407.681468944193', [1, 8, 9, 13, 14, 21, 24, 25, 26, 31, 40, 41, 50, 52, 55, 57, 66, 73, 74, 75, 87, 90, 95, 105, 106, 109, 110, 111, 132, 141, 146, 167, 170, 182, 185, 186, 188, 191, 201, 205, 208, 215, 234, 237, 248, 265, 276, 287, 298, 299], {1: [44, 61, 63, 103, 238], 8: [68, 93, 190, 244], 9: [9, 42, 148, 295], 13: [5, 104, 114, 171, 217, 278], 14: [14, 79, 83, 129, 137, 210], 21: [21, 51, 54, 135, 144], 24: [24, 37, 94, 183, 203, 235], 25: [3, 31, 58, 142, 211, 227, 260, 262], 26: [13, 56, 116, 125, 204, 231], 31: [2, 11, 19, 66, 98, 128, 175], 40: [40, 88, 107, 118, 133], 41: [172, 176, 237, 270], 50: [50, 77, 229, 239, 290], 52: [30, 35, 115, 136, 263, 280, 287], 55: [76, 85, 212, 259, 268], 57: [29, 82, 187, 216], 66: [16, 17, 99, 149, 224, 258], 73: [25, 73, 166, 264, 299], 74: [1, 26, 46, 49, 53, 74, 78, 117, 140, 152, 160, 162, 174, 198, 200, 207, 233, 243, 251, 252, 292, 293], 75: [45, 69, 75, 143, 169, 261], 87: [87, 196, 209, 232, 296], 90: [57, 62, 90, 130, 189, 242], 95: [179, 236, 284, 294, 297], 105: [36, 70, 165, 202, 256, 272], 106: [41, 106, 155, 161, 219, 247], 109: [18, 47, 55, 100, 109, 274], 110: [60, 102, 110, 124, 156, 164, 250, 254], 111: [15, 34, 111, 257], 132: [132, 151, 177, 181], 141: [92, 126, 134, 141, 197, 253], 146: [38, 67, 269, 273], 167: [6, 97, 154, 173, 194, 213], 170: [86, 170, 226, 266, 283, 288], 182: [12, 27, 48, 72, 182, 279], 185: [71, 123, 168, 185, 193, 205], 186: [81, 157, 186, 240, 249, 291], 188: [28, 121, 150, 188, 199, 225], 191: [145, 159, 191], 201: [4, 8, 23, 101, 120], 205: [139, 163, 214, 275, 282], 208: [0, 95, 112, 184, 192, 208, 286], 215: [32, 96, 108, 158, 195], 234: [7, 43, 234, 267, 281], 237: [65, 113, 119, 127, 220, 277, 285], 248: [20, 52, 59, 84, 105, 146, 147, 153, 245, 248, 255], 265: [39, 64, 265, 271], 276: [33, 80, 91, 122, 138, 167, 178, 221, 241, 276], 287: [180, 206, 215, 228, 246], 298: [89, 131, 223, 230, 298], 299: [10, 22, 201, 218, 222, 289]})

DATASET 9
no cut parameters, heuristics = 0.3, no z_j.start, cutoff used, gap 20%
Best objective 2.058943350362e+04, best bound 1.649995968742e+04, gap 19.8620%

('IFS took 0.23 seconds. Total time: 254.9 seconds, Z : 20589.43350362025', [7, 20, 23, 36, 51, 52, 58, 67, 69, 71, 73, 76, 85, 93, 97, 105, 108, 110, 123, 132, 140, 142, 144, 152, 163, 165, 172, 173, 187, 199, 201, 203, 208, 212, 214, 218, 227, 229, 237, 239, 242, 249, 256, 261, 271, 273, 279, 281, 284, 296], {7: [7, 72, 83, 102, 191, 221, 286], 20: [20, 59, 141, 188, 205, 247], 23: [40, 113, 149, 215, 295], 36: [36, 95, 112, 117, 218, 228, 271, 291], 51: [8, 39, 91, 164, 232, 283], 52: [3, 52, 65, 172, 229, 288], 58: [54, 123, 206, 281, 285], 67: [67, 86, 115, 166, 224], 69: [47, 69, 114, 124, 152, 176], 71: [71, 168, 251, 268], 73: [27, 60, 153, 162, 170, 194], 76: [4, 14, 30, 76, 105, 125, 154, 292, 296], 85: [12, 17, 41, 62, 70, 209, 262, 263], 93: [2, 16, 81, 85, 119, 127, 161, 175, 198, 199, 219, 257, 278, 289], 97: [28, 75, 88, 97, 276], 105: [25, 106, 157, 235, 246, 267, 293], 108: [1, 37, 51, 108, 129, 131, 167, 223, 253], 110: [10, 32, 44, 58, 101, 103, 110, 186, 195, 201, 226, 236, 294], 123: [0, 5, 21, 50, 68, 174, 231, 277], 132: [64, 79, 87, 94, 132, 134], 140: [13, 53, 122, 140, 181, 213], 142: [82, 107, 142, 183, 216, 243, 245], 144: [144, 160, 230, 280], 152: [24, 38, 78, 200], 163: [23, 49, 61, 128, 133, 265, 297], 165: [155, 163, 165], 172: [130, 171, 177, 242, 272], 173: [15, 29, 66, 173, 178, 258, 287], 187: [18, 22, 34, 42, 45, 99, 187], 199: [74, 84, 143, 234, 270], 201: [63, 90, 100, 118], 203: [138, 202, 203, 290, 298], 208: [11, 159, 185, 208], 212: [31, 104, 111, 139, 184, 212], 214: [180, 190, 214, 217, 249, 299], 218: [9, 93, 182, 196, 210, 241, 250, 252, 254], 227: [126, 148, 207, 220, 227], 229: [89, 116, 192, 222, 233], 237: [121, 225, 237, 238], 239: [73, 96, 109, 156, 197, 204, 239], 242: [48, 57, 135, 158, 211], 249: [33, 77, 248, 259, 266, 274], 256: [35, 256, 282], 261: [46, 55, 80, 260, 261], 271: [19, 136, 147], 273: [26, 145, 150, 179, 193, 264, 273], 279: [6, 92, 189, 240, 279], 281: [98, 137, 169, 255], 284: [43, 120, 151, 275, 284], 296: [56, 146, 244, 269]})

phase 2 with this solution (no gap, cut parameters active,  heuristics 0.3  mipfocus 2, without these two, it took more than 1200secs and was still at 4% gap lol)
cutoff used
it found the optimal value in 86 seconds, rest is proving it. (I can say this because I know the optimal value)
2% gap in 211 seconds!! (upperbound is already the optimal value)
1.06% gap in 283 seconds.
less than 1% gap achieved in 324 seconds.

Explored 18135 nodes (10761889 simplex iterations) in 517.24 seconds (642.84 work units)
Thread count was 8 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 1.847620090820e+04, best bound 1.847620090820e+04, gap 0.0000%

('IFS took 0.2 seconds. Total time: 520.32 seconds, Z : 18476.200908195387', [2, 10, 13, 20, 23, 25, 44, 50, 59, 67, 76, 97, 104, 105, 108, 113, 123, 126, 127, 128, 132, 134, 144, 147, 161, 162, 165, 193, 194, 199, 200, 201, 218, 227, 237, 241, 251, 258, 259, 261, 262, 263, 266, 269, 278, 280, 285, 288, 290, 291], {2: [2, 34, 42, 81, 142, 187, 218], 10: [10, 32, 58, 63, 68, 103, 110, 186, 226, 294], 13: [13, 82, 140], 20: [20, 156, 188, 205, 247], 23: [23, 40, 149, 215, 257, 295, 298], 25: [130, 145, 157, 172, 272], 44: [16, 48, 135, 211, 242, 287], 50: [6, 124, 189, 236, 279], 59: [60, 98, 137, 141, 160, 169, 206], 67: [37, 86, 166, 223, 224], 76: [4, 14, 30, 51, 76, 114, 244, 265, 292], 97: [18, 28, 75, 97, 99, 204, 216, 270], 104: [104, 139, 184, 212, 238], 105: [106, 191, 222, 293], 108: [1, 108, 174, 253, 258, 276, 283], 113: [47, 69, 91, 176, 232], 123: [5, 96, 101, 123, 277], 126: [120, 185, 275, 284], 127: [72, 84, 127, 192, 234, 235], 128: [50, 61, 73, 105, 112, 128, 131, 163, 175, 220, 241, 245, 246, 297], 132: [0, 64, 87, 92, 132, 134, 240], 134: [29, 94, 158, 171, 173, 255, 286], 144: [67, 144, 230, 280], 147: [93, 136, 147, 250, 271], 161: [25, 55, 57, 90, 111, 177], 162: [162, 183, 194, 195, 248], 165: [49, 133, 155, 165, 180, 190, 249, 254, 274], 193: [65, 193, 229, 273], 194: [83, 153, 170], 199: [74, 119, 143, 199, 289], 200: [24, 38, 113, 152, 154, 196, 198, 200, 209, 296], 201: [15, 66, 100, 118, 178], 218: [9, 19, 21, 22, 62, 107, 182, 210, 252, 267], 227: [53, 126, 148, 151, 227], 237: [121, 219, 225, 237], 241: [35, 207, 256, 282], 251: [71, 117, 168, 179, 231, 251, 268, 278], 258: [197, 239, 281], 259: [26, 27, 45, 79, 85, 95, 122, 129, 214, 217, 243, 259, 299], 261: [31, 46, 80, 161, 260, 261], 262: [43, 159, 181, 202, 208], 263: [12, 17, 41, 70, 78, 263], 266: [33, 77, 213, 266], 269: [56, 125, 146, 167, 269], 278: [3, 7, 102, 221, 233, 264], 280: [8, 39, 59, 115, 164], 285: [54, 109, 201, 285], 288: [52, 89, 116, 288], 290: [11, 138, 203, 262, 290], 291: [36, 44, 88, 150, 228, 291]})
I think cutoff made this faster but I'm not sure, still it's 200+ secs difference!

####################################################################
DATASET 7 WITH TWO PHASE
Phase 1: Added MIPFocus, 2 for this dataset
Time limit reached
Best objective 3.413540953321e+04, best bound 2.489736554514e+04, gap 27.0629%

('IFS took 0.55 seconds. Total time: 301.92 seconds, Z : 34135.40953321053', [11, 23, 30, 31, 49, 57, 59, 62, 63, 71, 72, 75, 80, 88, 90, 103, 106, 111, 113, 115, 124, 126, 129, 131, 135, 138, 149, 152, 153, 168, 169, 182, 194, 195, 198], {11: [10, 11, 34, 58, 66, 152, 190], 23: [23, 154, 184, 196], 30: [3, 24, 30, 183], 31: [6, 20, 31, 57, 69, 106, 119, 124, 150], 49: [33, 84, 151, 171, 193], 57: [96, 105, 128, 189], 59: [4, 43, 59, 153, 195], 62: [85, 95, 101, 175], 63: [82, 89, 103, 118, 136, 141, 163, 178], 71: [75, 92, 132, 133, 186, 191], 72: [44, 72, 79, 81, 198], 75: [7, 127, 173, 179, 197], 80: [114, 117, 165, 170], 88: [15, 47, 88, 148, 177], 90: [9, 29, 62, 87, 90, 120, 147], 103: [0, 5, 65, 76, 121, 125, 166], 106: [16, 60, 98, 116, 131, 155, 180, 182], 111: [2, 28, 63, 111, 144], 113: [17, 36, 38, 55, 94, 99, 102, 113, 140, 172], 115: [8, 18, 21, 48, 115, 160], 124: [39, 104, 129, 145], 126: [1, 50, 56, 122, 135], 129: [14, 35, 40, 74, 174, 181], 131: [26, 32, 80, 100, 156, 168], 135: [97, 134, 137, 162], 138: [46, 49, 52, 68, 71, 112, 130, 138], 149: [27, 37, 42, 61, 83, 91, 164], 152: [22, 54, 123, 126, 142, 158, 161], 153: [12, 41, 64, 110], 168: [13, 67, 70, 109, 176], 169: [45, 51, 143, 169, 199], 182: [25, 73, 77, 146, 149, 159], 194: [107, 139, 157, 167, 187, 194], 195: [19, 53, 108, 192], 198: [78, 86, 93, 185, 188]})

Phase 2: removed MIPFocus, Heuristics = 0.1
Time limit reached
Best objective 3.117108547998e+04, best bound 2.322501580893e+04, gap 25.4918%


AGAIN
Phase 1: removed cut parameters, MIPFocus = 2
Time limit reached
Best objective 3.312011589654e+04, best bound 2.490429885227e+04, gap 24.8061%

('IFS took 0.5 seconds. Total time: 301.92 seconds, Z : 33120.11589653636', [0, 8, 14, 18, 23, 24, 25, 26, 31, 33, 50, 53, 59, 62, 63, 80, 87, 93, 96, 97, 102, 124, 132, 135, 136, 142, 149, 150, 158, 161, 164, 166, 171, 180, 191], {0: [4, 64, 110, 192], 8: [2, 28, 78, 111, 126, 163], 14: [14, 54, 74, 129], 18: [7, 18, 67, 96, 115, 141], 23: [49, 125, 151, 154, 199], 24: [24, 30, 40, 99, 113], 25: [0, 15, 68, 80, 88, 130, 164, 177], 26: [5, 26, 35, 100, 109, 156, 176], 31: [6, 20, 31, 69, 92, 106, 158, 180, 190], 33: [23, 133, 157, 184, 188], 50: [105, 122, 134, 135], 53: [53, 59, 145, 187, 195], 59: [19, 41, 108, 153], 62: [85, 95, 101, 175], 63: [63, 82, 89, 118, 160, 178], 80: [114, 117, 143, 159], 87: [44, 72, 81, 87, 120], 93: [33, 45, 65, 121, 185, 198], 96: [21, 22, 97, 167], 97: [1, 56, 139, 189, 194], 102: [12, 52, 61, 70, 91, 94, 170], 124: [3, 38, 39, 104, 144], 132: [76, 84, 132, 193], 135: [50, 73, 128, 137, 181], 136: [8, 86, 93, 103, 173, 179], 142: [34, 66, 79, 90, 147, 174], 149: [13, 16, 17, 27, 42, 83, 102, 149, 168], 150: [32, 75, 77, 131, 146], 158: [47, 48, 107, 116, 148, 165, 166, 182], 161: [29, 55, 62, 123, 142, 152, 161], 164: [10, 11, 36, 58, 172], 166: [51, 140, 169, 183, 186, 196], 171: [9, 60, 112, 124, 127, 136, 162, 171, 197], 180: [37, 43, 46, 57, 98, 119, 150, 155], 191: [25, 71, 138, 191]})

Phase 2: removed Z > min and Z < max constraints (I thought they may be unnecessarily slowing down the speed in the beginning)
no MIPFocus, Heuristics = 0.1, cut parameters active, cutoff used (cutoff phase 1 optimal value)
14.4% gap in 266 seconds.
Time limit reached
Best objective 3.031980923423e+04, best bound 2.625361464737e+04, gap 13.4110%

('Total time: 600.08 seconds, Z : 30319.809234228367', [12, 14, 18, 20, 21, 25, 28, 29, 30, 46, 53, 56, 63, 70, 71, 72, 87, 90, 99, 103, 106, 123, 128, 149, 153, 159, 164, 169, 182, 184, 186, 189, 195, 196, 197], {12: [0, 16, 64, 67, 73, 140, 153, 168, 187], 14: [10, 14, 40, 66, 129], 18: [9, 18, 115, 141, 162, 185], 20: [6, 20, 31, 48, 106, 124, 150, 166, 180], 21: [7, 21, 96, 100, 103, 198], 25: [15, 68, 88, 130, 148, 177], 28: [2, 63, 118, 173, 178, 190], 29: [85, 95, 101, 175], 30: [3, 24, 99, 113, 144], 46: [25, 47, 112, 114, 116, 131, 143, 171], 53: [4, 17, 52, 104, 145, 195], 56: [22, 122, 139, 194], 63: [28, 78, 111, 136, 157, 160], 70: [26, 70, 91, 109], 71: [71, 138, 154, 191], 72: [8, 72, 79, 87, 89, 156], 87: [34, 44, 81, 142, 152, 161], 90: [29, 35, 62, 90, 120, 147, 163, 172], 99: [30, 38, 39, 74], 103: [45, 65, 93, 121, 179], 106: [37, 46, 69, 149, 155, 158, 182], 123: [50, 56, 123, 135, 181, 183], 128: [60, 105, 128, 134, 174], 149: [5, 13, 27, 42, 43, 57, 92, 98, 102, 119, 126], 153: [1, 12, 41, 59, 94, 110], 159: [61, 117, 159, 164, 165], 164: [11, 36, 54, 58], 169: [51, 76, 80, 133, 169], 182: [32, 77, 107, 146, 176], 184: [23, 125, 184, 188], 186: [33, 84, 132, 193], 189: [55, 83, 97, 137, 167, 189], 195: [19, 53, 108, 192], 196: [49, 151, 186, 196, 199], 197: [75, 82, 86, 127, 170, 197]})

let's try with MIPFocus = 2
Phase 2
Time limit reached
Best objective 3.046224669981e+04, best bound 2.498904878881e+04, gap 17.9672%

('Total time: 600.1 seconds, Z : 30462.2466998086', [14, 18, 21, 25, 29, 31, 33, 35, 37, 46, 51, 53, 71, 78, 87, 89, 90, 99, 116, 121, 134, 135, 145, 146, 149, 153, 157, 164, 166, 176, 183, 192, 193, 194, 197], {14: [14, 43, 54, 58, 129], 18: [9, 18, 96, 115, 185, 189], 21: [21, 45, 68, 100, 160, 162], 25: [15, 25, 60, 88, 148, 166, 172, 177], 29: [85, 95, 101, 175], 31: [0, 6, 20, 31, 48, 69, 73, 92, 106, 107, 112, 124], 33: [23, 125, 184, 188], 35: [34, 50, 87, 123, 135, 174], 37: [13, 37, 155, 180, 182], 46: [7, 46, 47, 61, 114, 165], 51: [51, 75, 76, 143, 154, 199], 53: [53, 104, 145, 158, 183, 195], 71: [17, 71, 130, 138, 190, 191], 78: [28, 78, 86, 103, 178], 87: [44, 72, 79, 142], 89: [2, 63, 81, 89, 118, 163], 90: [29, 62, 83, 90, 120, 147, 161], 99: [24, 30, 38, 40, 66], 116: [16, 32, 117, 131, 159], 121: [65, 93, 121, 151], 134: [56, 97, 167, 194], 135: [67, 94, 105, 134, 152, 181], 145: [3, 39, 74, 99, 126, 156], 146: [77, 80, 116, 146, 176], 149: [5, 27, 42, 52, 57, 98, 102, 119, 140, 144, 149, 150, 164], 153: [12, 64, 153, 168, 170], 157: [8, 82, 111, 136, 137, 141, 157, 171], 164: [10, 11, 36, 55, 113], 166: [49, 133, 169, 186, 196], 176: [26, 70, 91, 109], 183: [1, 22, 41, 59, 110, 187], 192: [4, 19, 108, 192], 193: [33, 84, 132, 193], 194: [35, 122, 128, 139], 197: [127, 173, 179, 197, 198]})

yeah no

let's try MIPFocus = 3 ? idk just no.
change of plans. fuck around and find the best combination of parameters.

no parameters not even cutoff
Time limit reached
Best objective 3.268218168972e+04, best bound 2.160795079571e+04, gap 33.8846%

('Total time: 600.05 seconds, Z : 32682.181689722', [4, 8, 14, 17, 18, 19, 22, 23, 25, 31, 35, 41, 50, 53, 60, 63, 80, 109, 120, 124, 135, 136, 147, 149, 150, 156, 158, 162, 163, 164, 169, 171, 180, 191, 193], {4: [1, 4, 5, 55, 158, 187, 190, 192], 8: [2, 28, 45, 63, 86], 14: [14, 54, 74, 129], 17: [32, 35, 67, 98, 100, 116], 18: [82, 96, 136, 141, 162, 173, 189], 19: [12, 19, 64, 73, 83, 108], 22: [56, 122, 139, 167], 23: [23, 125, 186, 196], 25: [0, 15, 25, 47, 88, 107, 130, 177], 31: [6, 20, 31, 48, 69, 106, 164, 180, 183], 35: [79, 123, 140, 142, 161, 174], 41: [41, 94, 110, 126, 153, 170], 50: [50, 57, 75, 134, 181, 194], 53: [53, 99, 104, 195], 60: [93, 133, 151, 184, 198], 63: [78, 89, 111, 118, 178], 80: [114, 117, 143, 159], 109: [26, 52, 59, 70, 109, 171], 120: [29, 62, 85, 101, 120, 147], 124: [24, 30, 38, 39], 135: [105, 128, 135, 137], 136: [65, 103, 121, 179, 188], 147: [43, 81, 87, 90, 152, 175], 149: [13, 16, 17, 27, 42, 92, 102, 149, 168], 150: [68, 77, 91, 146, 172, 176], 156: [3, 10, 40, 113, 145, 156], 158: [7, 80, 131, 144, 148, 165, 166], 162: [8, 21, 22, 97, 115], 163: [9, 44, 72, 95, 157, 163, 185], 164: [11, 34, 36, 58, 66], 169: [33, 49, 51, 169, 199], 171: [18, 127, 160, 197], 180: [37, 46, 60, 61, 112, 119, 150, 155, 182], 191: [71, 124, 138, 154, 191], 193: [76, 84, 132, 193]})

be so ffr
okay no cutoff, MIPFocus 2 and heuristics 0.3 and all the cut parameters
the best so far
Time limit reached
Best objective 2.957363690857e+04, best bound 2.571176718014e+04, gap 13.0585%

('Total time: 600.05 seconds, Z : 29573.636908571105', [6, 8, 12, 14, 18, 21, 25, 30, 31, 35, 39, 53, 56, 63, 65, 71, 76, 90, 92, 98, 114, 120, 125, 128, 135, 149, 150, 152, 159, 163, 164, 172, 186, 195, 197], {6: [25, 37, 61, 68, 119, 155, 182], 8: [8, 78, 82, 111, 118, 178], 12: [12, 59, 64, 153, 156], 14: [14, 54, 129, 181], 18: [18, 103, 115, 141, 160, 162], 21: [21, 48, 96, 100, 189, 198], 25: [15, 17, 47, 88, 107, 148, 177], 30: [3, 24, 30, 38], 31: [6, 20, 31, 69, 106, 180, 190], 35: [9, 22, 34, 60, 79, 94, 124, 135, 170, 171], 39: [10, 39, 40, 74, 99], 53: [53, 104, 145, 195], 56: [1, 50, 122, 128], 63: [2, 28, 63, 89, 164, 185], 65: [65, 86, 121, 136, 166, 179], 71: [71, 92, 138, 154, 191], 76: [7, 33, 45, 151, 186, 196], 90: [29, 55, 62, 90, 120, 140, 147, 152, 163], 92: [41, 75, 110, 150, 157, 167, 183, 187], 98: [26, 70, 73, 91, 109], 114: [46, 80, 130, 131, 143, 165], 120: [43, 44, 85, 101, 175], 125: [23, 125, 173, 184], 128: [5, 97, 105, 139], 135: [56, 67, 112, 134, 137, 172, 194], 149: [0, 13, 16, 27, 42, 98, 149, 168], 150: [32, 77, 144, 146, 176], 152: [35, 66, 83, 123, 126, 142, 161, 174], 159: [52, 114, 116, 117, 159], 163: [72, 81, 87, 95], 164: [11, 36, 58, 102, 113], 172: [49, 51, 133, 158, 169, 199], 186: [76, 84, 132, 193], 195: [4, 19, 108, 192], 197: [57, 93, 127, 188, 197]})
possibly could go to the optimal

let's try with Z> min and Z<max constraints idk
